plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group 'fr.enimaloc'
version '0.1.0'

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}
compileJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://m2.enimaloc.fr/maven" }
    maven { url "https://m2.chew.pro/releases" }
    maven { url "https://m2.dv8tion.net/releases" }
}

dependencies {
    implementation 'fr.enimaloc.enutils:tuples:0.0.3'
    implementation 'fr.enimaloc.enutils:classes:0.0.3'
    implementation 'fr.enimaloc.enutils:hardwareUtils:0.0.3'

    implementation 'pw.chew:jda-chewtils:1.22.0'
    implementation 'net.dv8tion:JDA:4.3.0_331'

    implementation 'com.sedmelluq:lavaplayer:1.3.78'

    implementation 'ch.qos.logback:logback-classic:1.2.6'
}

test {
    print "No test defined"
}

jar {
    actions = []
    dependsOn = []
    dependsOn('shadowJar')
}

processResources {
    def props = [GIT_BRANCH: gitBranch()]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('constant.txt') {
        expand props
    }
}

def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}